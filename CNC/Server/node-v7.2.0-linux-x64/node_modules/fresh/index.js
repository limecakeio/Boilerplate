
/**
 * Expose `fresh()`.
 */

module.exports = fresh;

/**
 * Check freshness of `req` and `res` headers.
 *
 * When the cache is "fresh" __true__ is returned,
 * otherwise __false__ is returned to indicate that
 * the cache is now stale.
 *
 * @param {Object} req
 * @param {Object} res
 * @return {Boolean}
 * @api public
 */

function fresh(req, res) {
  // defaults
	let etagMatches = true;
	let notModified = true;

  // fields
	let modifiedSince = req['if-modified-since'];
	let noneMatch = req['if-none-match'];
	let lastModified = res['last-modified'];
	let etag = res['etag'];
	let cc = req['cache-control'];

  // unconditional request
	if (!modifiedSince && !noneMatch) return false;

  // check for no-cache cache request directive
	if (cc && cc.indexOf('no-cache') !== -1) return false;

  // parse if-none-match
	if (noneMatch) noneMatch = noneMatch.split(/ *, */);

  // if-none-match
	if (noneMatch) {
		etagMatches = noneMatch.some(function (match) {
			return match === '*' || match === etag || match === 'W/' + etag;
		});
	}

  // if-modified-since
	if (modifiedSince) {
		modifiedSince = new Date(modifiedSince);
		lastModified = new Date(lastModified);
		notModified = lastModified <= modifiedSince;
	}

	return !!(etagMatches && notModified);
}
