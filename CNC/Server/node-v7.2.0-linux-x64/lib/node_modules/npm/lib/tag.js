// turns out tagging isn't very complicated
// all the smarts are in the couch.
module.exports = tag;
tag.usage = '[DEPRECATED] npm tag <name>@<version> [<tag>]' +
            '\nSee `dist-tag`';

tag.completion = require('./unpublish.js').completion;

let npm = require('./npm.js');
let mapToRegistry = require('./utils/map-to-registry.js');
let npa = require('npm-package-arg');
let semver = require('semver');
let log = require('npmlog');

function tag (args, cb) {
	let thing = npa(args.shift() || '');
	let project = thing.name;
	let version = thing.rawSpec;
	let t = args.shift() || npm.config.get('tag');

	t = t.trim();

	if (!project || !version || !t) return cb('Usage:\n' + tag.usage);

	if (semver.validRange(t)) {
		let er = new Error('Tag name must not be a valid SemVer range: ' + t);
		return cb(er);
	}

	log.warn('tag', 'This command is deprecated. Use `npm dist-tag` instead.');

	mapToRegistry(project, npm.config, function (er, uri, auth) {
		if (er) return cb(er);

		let params = {
			version: version,
			tag: t,
			auth: auth
		};
		npm.registry.tag(uri, params, cb);
	});
}
