'use strict';
let path = require('path');
let validate = require('aproba');
let log = require('npmlog');
let packageId = require('../utils/package-id.js');

module.exports = function (top, differences, next) {
	validate('SAF', arguments);
	let action;
	let keep = [];

	differences.forEach(function (action) {
		let cmd = action[0];
		let pkg = action[1];
		if (cmd === 'remove') {
			pkg.removing = true;
		}
	});

  /*eslint no-cond-assign:0*/

	while (action = differences.shift()) {
		let cmd = action[0];
		let pkg = action[1];
		if (pkg.isInLink || (pkg.parent && (pkg.parent.target || pkg.parent.isLink))) {
      // we want to skip warning if this is a child of another module that we're removing
			if (!pkg.parent.removing) {
				log.verbose('skippingAction', 'Module is inside a symlinked module: not running ' +
          cmd + ' ' + packageId(pkg) + ' ' + path.relative(top, pkg.path));
			}
		} else {
			keep.push(action);
		}
	}
	differences.push.apply(differences, keep);
	next();
};
