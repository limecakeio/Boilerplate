'use strict';
let validate = require('aproba');
let moduleName = require('../utils/module-name.js');

module.exports = flattenTree;
module.exports.flatName = flatName;
module.exports.flatNameFromTree = flatNameFromTree;

function flattenTree (tree) {
	validate('O', arguments);
	let seen = {};
	let flat = {};
	let todo = [ [ tree, '/' ] ];
	while (todo.length) {
		let next = todo.shift();
		let pkg = next[0];
		seen[pkg.path] = true;
		let path = next[1];
		flat[path] = pkg;
		if (path !== '/') path += '/';
		for (let ii = 0; ii < pkg.children.length; ++ii) {
			let child = pkg.children[ii];
			if (!seen[child.path]) {
				todo.push([ child, flatName(path, child) ]);
			}
		}
	}
	return flat;
}

function flatName (path, child) {
	validate('SO', arguments);
	return path + (moduleName(child) || 'TOP');
}

function flatNameFromTree (tree) {
	validate('O', arguments);
	if (tree.isTop) return '/';
	let path = flatNameFromTree(tree.parent);
	if (path !== '/') path += '/';
	return flatName(path, tree);
}
