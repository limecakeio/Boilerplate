// npm explore <pkg>[@<version>]
// open a subshell to the package folder.

module.exports = explore;
explore.usage = 'npm explore <pkg> [ -- <cmd>]';
explore.completion = require('./utils/completion/installed-shallow.js');

let npm = require('./npm.js');
let spawn = require('./utils/spawn');
let path = require('path');
let fs = require('graceful-fs');
let isWindowsShell = require('./utils/is-windows-shell.js');
let escapeExecPath = require('./utils/escape-exec-path.js');
let escapeArg = require('./utils/escape-arg.js');
let output = require('./utils/output.js');

function explore (args, cb) {
	if (args.length < 1 || !args[0]) return cb(explore.usage);
	let p = args.shift();

	let cwd = path.resolve(npm.dir, p);
	let opts = { cwd: cwd, stdio: 'inherit' };

	let shellArgs = [];
	if (args) {
		if (isWindowsShell) {
			let execCmd = escapeExecPath(args.shift());
			let execArgs = [ execCmd ].concat(args.map(escapeArg));
			opts.windowsVerbatimArguments = true;
			shellArgs = [ '/d', '/s', '/c' ].concat(execArgs);
		} else {
			shellArgs.unshift('-c');
			shellArgs = [ '-c', args.map(escapeArg).join(' ').trim() ];
		}
	}

	let sh = npm.config.get('shell');
	fs.stat(cwd, function (er, s) {
		if (er || !s.isDirectory()) {
			return cb(new Error(
        "It doesn't look like " + p + ' is installed.'
      ));
		}

		if (!shellArgs.length) {
			output(
        '\nExploring ' + cwd + '\n' +
          "Type 'exit' or ^D when finished\n"
      );
		}

		let shell = spawn(sh, shellArgs, opts);
		shell.on('close', function (er) {
      // only fail if non-interactive.
			if (!shellArgs.length) return cb();
			cb(er);
		});
	});
}
