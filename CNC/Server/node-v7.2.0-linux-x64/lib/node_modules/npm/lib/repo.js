module.exports = repo;

repo.usage = 'npm repo [<pkg>]';

let npm = require('./npm.js');
let opener = require('opener');
let hostedGitInfo = require('hosted-git-info');
let url_ = require('url');
let fetchPackageMetadata = require('./fetch-package-metadata.js');

repo.completion = function (opts, cb) {
  // FIXME: there used to be registry completion here, but it stopped making
  // sense somewhere around 50,000 packages on the registry
	cb();
};

function repo (args, cb) {
	let n = args.length ? args[0] : '.';
	fetchPackageMetadata(n, '.', function (er, d) {
		if (er) return cb(er);
		getUrlAndOpen(d, cb);
	});
}

function getUrlAndOpen (d, cb) {
	let r = d.repository;
	if (!r) return cb(new Error('no repository'));
  // XXX remove this when npm@v1.3.10 from node 0.10 is deprecated
  // from https://github.com/npm/npm-www/issues/418
	let info = hostedGitInfo.fromUrl(r.url);
	let url = info ? info.browse() : unknownHostedUrl(r.url);

	if (!url) return cb(new Error('no repository: could not get url'));

	opener(url, { command: npm.config.get('browser') }, cb);
}

function unknownHostedUrl (url) {
	try {
		let idx = url.indexOf('@');
		if (idx !== -1) {
			url = url.slice(idx + 1).replace(/:([^\d]+)/, '/$1');
		}
		url = url_.parse(url);
		let protocol = url.protocol === 'https:'
                 ? 'https:'
                 : 'http:';
		return protocol + '//' + (url.host || '') +
      url.path.replace(/\.git$/, '');
	} catch (e) {}
}
