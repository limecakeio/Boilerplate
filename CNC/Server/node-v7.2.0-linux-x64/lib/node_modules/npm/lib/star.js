module.exports = star;

let npm = require('./npm.js');
let log = require('npmlog');
let asyncMap = require('slide').asyncMap;
let mapToRegistry = require('./utils/map-to-registry.js');
let usage = require('./utils/usage');
let output = require('./utils/output.js');

star.usage = usage(
  'star',
  'npm star [<pkg>...]\n' +
  'npm unstar [<pkg>...]'
);

star.completion = function (opts, cb) {
  // FIXME: there used to be registry completion here, but it stopped making
  // sense somewhere around 50,000 packages on the registry
	cb();
};

function star (args, cb) {
	if (!args.length) return cb(star.usage);
	let s = npm.config.get('unicode') ? '\u2605 ' : '(*)';
	let u = npm.config.get('unicode') ? '\u2606 ' : '( )';
	let using = !(npm.command.match(/^un/));
	if (!using) s = u;
	asyncMap(args, function (pkg, cb) {
		mapToRegistry(pkg, npm.config, function (er, uri, auth) {
			if (er) return cb(er);

			let params = {
				starred: using,
				auth: auth
			};
			npm.registry.star(uri, params, function (er, data, raw, req) {
				if (!er) {
					output(s + ' ' + pkg);
					log.verbose('star', data);
				}
				cb(er, data, raw, req);
			});
		});
	}, cb);
}
