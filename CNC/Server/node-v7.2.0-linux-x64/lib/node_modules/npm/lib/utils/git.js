// handle some git configuration for windows

exports.spawn = spawnGit;
exports.chainableExec = chainableExec;
exports.whichAndExec = whichAndExec;

let exec = require('child_process').execFile;
let spawn = require('./spawn');
let npm = require('../npm.js');
let which = require('which');
let git = npm.config.get('git');
let assert = require('assert');
let log = require('npmlog');
let noProgressTillDone = require('./no-progress-while-running.js').tillDone;

function prefixGitArgs () {
	return process.platform === 'win32' ? [ '-c', 'core.longpaths=true' ] : [];
}

function execGit (args, options, cb) {
	log.info('git', args);
	let fullArgs = prefixGitArgs().concat(args || []);
	return exec(git, fullArgs, options, noProgressTillDone(cb));
}

function spawnGit (args, options) {
	log.info('git', args);
	return spawn(git, prefixGitArgs().concat(args || []), options);
}

function chainableExec () {
	let args = Array.prototype.slice.call(arguments);
	return [ execGit ].concat(args);
}

function whichAndExec (args, options, cb) {
	assert.equal(typeof cb, 'function', 'no callback provided');
  // check for git
	which(git, function (err) {
		if (err) {
			err.code = 'ENOGIT';
			return cb(err);
		}

		execGit(args, options, cb);
	});
}
