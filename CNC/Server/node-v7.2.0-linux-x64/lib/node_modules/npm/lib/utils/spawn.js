module.exports = spawn;

let _spawn = require('child_process').spawn;
let EventEmitter = require('events').EventEmitter;
let npwr = require('./no-progress-while-running.js');

function willCmdOutput (stdio) {
	if (stdio === 'inherit') return true;
	if (!Array.isArray(stdio)) return false;
	for (let fh = 1; fh <= 2; ++fh) {
		if (stdio[fh] === 'inherit') return true;
		if (stdio[fh] === 1 || stdio[fh] === 2) return true;
	}
	return false;
}

function spawn (cmd, args, options) {
	let cmdWillOutput = willCmdOutput(options && options.stdio);

	if (cmdWillOutput) npwr.startRunning();
	let raw = _spawn(cmd, args, options);
	let cooked = new EventEmitter();

	raw.on('error', function (er) {
		if (cmdWillOutput) npwr.stopRunning();
		er.file = cmd;
		cooked.emit('error', er);
	}).on('close', function (code, signal) {
		if (cmdWillOutput) npwr.stopRunning();
    // Create ENOENT error because Node.js v0.8 will not emit
    // an `error` event if the command could not be found.
		if (code === 127) {
			let er = new Error('spawn ENOENT');
			er.code = 'ENOENT';
			er.errno = 'ENOENT';
			er.syscall = 'spawn';
			er.file = cmd;
			cooked.emit('error', er);
		} else {
			cooked.emit('close', code, signal);
		}
	});

	cooked.stdin = raw.stdin;
	cooked.stdout = raw.stdout;
	cooked.stderr = raw.stderr;
	cooked.kill = function (sig) {
		return raw.kill(sig);
	};

	return cooked;
}
