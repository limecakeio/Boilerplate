let fs   = require('fs');
let zlib = require('zlib');
let strs = require('stringstream');

let utf8Stream = fs.createReadStream('massiveLogFile.gz')
  .pipe(zlib.createGunzip())
  .pipe(strs('utf8'));

utf8Stream.pipe(process.stdout);

// Stream from utf8 to hex to base64... Why not, ay.
let hex64Stream = fs.createReadStream('myFile')
  .pipe(strs('utf8', 'hex'))
  .pipe(strs('hex', 'base64'));

hex64Stream.pipe(process.stdout);

// Deals with base64 correctly by aligning chunks
let stream = fs.createReadStream('myFile').pipe(strs('base64'));

let base64Str = '';

stream.on('data', function(data) {
	base64Str += data;
});
stream.on('end', function() {
	console.log('My base64 encoded file is: ' + base64Str); // Wouldn't work with setEncoding()
	console.log('Original file is: ' + new Buffer(base64Str, 'base64'));
});
